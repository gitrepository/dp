###-###
RTB018:
com.ch04
FIX: FACTORY METHOD PATTERN
Factory Method Pattern defines an interface for creating object, but lets subclass to
-decide which class to instantiate.
Factory method defer instantiation to subclasses.

Here we have two different franchises (NYC & Chicago). 
They way pizzas, for instance are created in NYC & Chicago are different.
Thus these differences are best handles by creating these pizzas locally (NYC/Chicago stores)
-rather than at the main store (ShopPizza).

We have achieved localized create process by applying factory method pattern where in 
-the instantiation is delegated to the subclass.

Classes that are NOT most likely to change can be instantiated.
Classes that are likely to change, it is better not depend on the concrete class as far as possible, 
-should use patterns like Factory Method to encapsulate that change.

CONCERN: 
Need ingredient factories, in order to each franchise to use the same quality of ingredients but  
-and mix them as per the local taste.




###-###
RTB017:
com.ch04
FIX: Multiple Simple Factories defined.
To cater to various franchises, we have various factories respectively.

ISSUE: Localized changes with respect to franchises makes the code more fragile.
DP - code is not closed for modification.
Need a better way to handle encapsulate similar object creation.


###-###
RTB016:
com.ch04
FIX: Simple Factory defined. 
Encapsulate the varying part, that way any changes to the varying part
-(FctorySimplePizza) is not directly effecting the class that uses it (PizzaStore).
Also it would be a single point of change when there are other classes that are dependent of it(FctorySimplePizza)

ISSUE: Franchise (NYC and Chicago branches);


###-###
RTB015:
com.ch04
CASE STUDY: Simple Pizza Store.
This simple pizza store creates a variety of pizzas like cheese, pepperoni etc.
PizzaStore class handles the creation of different Pizzas.

ISSUE: Upon addition/deletion of pizza types the code modification is needed.
PizzaStore point of view - Code should be open for extension and closed for modification (is violated)
