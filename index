###-###
RTB017:
com.ch04
FIX: Multiple Simple Factories defined.
ISSUE: Localized changes with respect to franchise will cause issue.

###-###
RTB016:
com.ch04
FIX: Simple Factory defined. Encapsulate the varying part (creation)
ISSUE: Franchise.

###-###
RTB015:
com.ch04
CASE STUDY: Simple Pizza store
ISSUE: Object creation code makes it open for modification in future.

###-###
RTB015:
com.ch04
CASE STUDY: Simple Pizza store
ISSUE: Object creation code makes it open for modification in future.

###-###
RTB014:
com.ch03
DECORATOR PATTERN - Code

###-###
RTB013:
com.ch03
FIX: DECORATOR PATTERN - Class diagram

###-###
RTB012:
com.ch03
FIX: Add place holders to abstract class. Cost() impl in the abstract class.
ISSUE: Partial fix. Existing Code change up on new product addition.

###-###
RTB011:
com.ch03
ISSUE: Starbuzz added lot of different coffee types. Class explosion.

###-###
RTB010:
com.ch03
CASE STUDY: Implement Starbuzz billing system.

###-###
RTB009:
com.ch02
Observer Pattern - Weather Station example

###-###
RTB008:
com.ch02
PARRTEN - Observer Pattern - class diagram

###-###
RTB007:
com.ch02
PARRTEN - Observer Pattern

###-###
RTB006:
com.ch01
SOLUTION #3: PARRTEN - Strategy Pattern

###-###
RTB005:
com.ch01
SOLUTION #2: Create Interface for changing functionality (fly/quack) 

###-###
RTB004:
com.ch01
SOLUTION #1: Override the fly functionality 

###-###
RTB003:
com.ch01
PROBLEM: Rubber ducks can now fly.

###-###
RTB002:
com.ch01
Fly functionality to Duck

###-###
RTB001:
com.ch01
Simple Duck bird class implementation.